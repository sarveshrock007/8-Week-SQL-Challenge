Link: https://8weeksqlchallenge.com/case-study-5/

  -- Data Cleansing Steps
  Drop table if exists clean_weekly_sales;
  Create table clean_weekly_sales as (
  SELECT To_Date(week_date, 'dd/mm/yy') as Week_Date,
    date_part('week', to_date(week_date, 'dd/mm/yy')) as Weeks,
    date_part('month', to_date(week_date, 'dd/mm/yy')) as Months,
    date_part('year', to_date(week_date, 'dd/mm/yy')) as Years,
    Region, Platform, coalesce(Segment, 'Unknown') as Segment,
    Case when right(segment, 1) = '1' then 'Young Adults'
          when right(segment, 1) = '2' then 'Middle Aged'
          when right(segment, 1) = '3' or right(segment, 1) = '4' then 'Retirees'
     else 'Unknown' end as Age_Band,
    Case when left(segment, 1) = 'C' then 'Couples'
          when left(segment, 1) = 'F' then 'Families'
     else 'Unknown' end as Demographic,
    Transactions, Sales,
    round(sales/transactions, 2) as avg_transaction  
  FROM data_mart.weekly_sales);


  --Data Exploration
  --Solution 1
  select distinct to_char(week_date, 'day') as Week_Day
  from clean_weekly_sales;

  --Solution 2
  with week_no as (
    select generate_series(1, 52) as Weeks
    )

  select distinct a.weeks 
  from week_no a left join clean_weekly_sales b
  on a.Weeks = b.Weeks
  where b.Weeks is null
  limit 5;

  --Solution 3
  select date_part('year', week_date), sum(transactions)
  from clean_weekly_sales
  group by date_part('year', week_date);

  --Solution 4
  select region, Months, sum(sales)
  from clean_weekly_sales
  group by region, Months
  limit 5;

  --Solution 5
  select distinct platform, sum(transactions)
  from clean_weekly_sales
  group by platform;

  --Solution 6
  with Platform_Date_Split as (
    select platform, years, months, sum(sales) as Total1 from clean_weekly_sales       group by Platform, months, years),
  Date_Split as (
    select years, months, sum(sales) as Total2 from clean_weekly_sales       
    group by months, years)

  select distinct Platform, a.years, a.months, round(100.00*Total1/Total2, 2) as 	  percentage
  from Platform_Date_Split a join Date_Split b
  on a.years=b.years and a.months=b.months
  order by years, months limit 5;

  --Solution 7
  with Demog_Date_Split as (
    select Demographic, years, sum(sales) as Total1 from clean_weekly_sales       group by Demographic, years),
  Date_Split as (
    select years, sum(sales) as Total2 from clean_weekly_sales       
    group by years)

  select distinct Demographic, a.years, round(100.00*Total1/Total2, 2) as percentage
  from Demog_Date_Split a join Date_Split b
  on a.years=b.years
  order by years limit 5;

  --Solution 8
  with Dist_Sales as (
    select Age_Band, Demographic, sum(sales) as Tot_Sale, sum(sum(sales)) over () as Totals
      from clean_weekly_sales
      where Platform = 'Retail'
      group by Age_Band, Demographic
    )
  select Age_Band, Demographic, Tot_Sale, round(100.00*Tot_Sale/Totals, 2) as Contribution from Dist_Sales
  order by COntribution desc;

  --Solution 9
  select years, platform, round(avg(avg_transaction), 0), sum(sales)/sum(transactions)
  from clean_weekly_sales
  group by years, platform
  order by years, platform;

  --Before & After Analysis
  --Solution 1	
  select distinct weeks from clean_weekly_sales where week_date = '2020-06-15';

  with before_sales as (
    select distinct weeks, sum(sales) as Sale
    from clean_weekly_sales
    where weeks between 21 and 28 and years = 2020
    group by weeks
    ),
  before_after_sales as (
    select 
    sum(case when weeks between 21 and 24 then Sale end) as Previous_Sales,
    sum(case when weeks between 25 and 28 then Sale end) as After_Sales
    from before_sales
    )

  select *, After_Sales-Previous_Sales as Growth, round(100*(After_Sales-Previous_Sales)/Previous_Sales, 2) as Sales_Change_Growth
  from before_after_sales;

  --Solution 2
  with before_sales as (
    select distinct weeks, sum(sales) as Sale
    from clean_weekly_sales
    where weeks between 21 and 28 and years = 2020
    group by weeks
    ),
  before_after_sales as (
    select 
    sum(case when weeks between 13 and 24 then Sale end) as Previous_Sales,
    sum(case when weeks between 25 and 37 then Sale end) as After_Sales
    from before_sales
    )

  select After_Sales-Previous_Sales as Growth, round(100*(After_Sales-Previous_Sales)/Previous_Sales, 2) as Sales_Change_Growth
  from before_after_sales;

  --Solution 3
  with before_sales as (
    select distinct years, weeks, sum(sales) as Sale
    from clean_weekly_sales
    where weeks between 21 and 28 and years in (2018, 2019, 2020)
    group by weeks, years
    ),
  before_after_sales as (
    select years,
    sum(case when weeks between 21 and 24 then Sale end) as Previous_Sales,
    sum(case when weeks between 25 and 28 then Sale end) as After_Sales
    from before_sales
    group by years
    )

  select years, After_Sales-Previous_Sales as Growth, round(100*(After_Sales-Previous_Sales)/Previous_Sales, 2) as Sales_Change_Growth
  from before_after_sales
  order by years asc;